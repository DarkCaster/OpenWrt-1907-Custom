language: c

os: linux
dist: bionic

before_install:
  - sudo apt-get install -y pigz

cache:
  directories:
    - /home/travis/.cache/openwrt

git:
  depth: false

env:
  global:
    - _scripts_repo="https://github.com/DarkCaster/OpenWrt-Helper-Scripts"
    - _configs_repo="https://github.com/DarkCaster/OpenWrt-Buildconfigs.git"
    - _openwrt_version="OpenWrt-1907-custom"
    - OPENWRT_BUILD_CACHE_DIR="/home/travis/.cache/openwrt"

prepare: &prepare
  stage: "prepare"
  script: ./build.sh "$_scripts_repo" "$_configs_repo" "$_openwrt_version" "$_build_name" prepare

tools: &tools
  stage: "tools"
  script: ./build.sh "$_scripts_repo" "$_configs_repo" "$_openwrt_version" "$_build_name" tools

toolchain_prep: &toolchain_prep
  stage: "toolchain prepare"
  script: ./build.sh "$_scripts_repo" "$_configs_repo" "$_openwrt_version" "$_build_name" toolchain_prep

toolchain_final: &toolchain_final
  stage: "toolchain final"
  script: ./build.sh "$_scripts_repo" "$_configs_repo" "$_openwrt_version" "$_build_name" toolchain_final

firmware: &firmware
  stage: "firmware final"
  script: ./build.sh "$_scripts_repo" "$_configs_repo" "$_openwrt_version" "$_build_name" firmware

jobs:
  include:
    - <<: *prepare
      env: _build_name="netgear-wnr2000+tplink-wr842nd"
    - <<: *prepare
      env: _build_name="kvm64"

    - <<: *tools
      env: _build_name="netgear-wnr2000+tplink-wr842nd"
    - <<: *tools
      env: _build_name="kvm64"

    - <<: *toolchain_prep
      env: _build_name="netgear-wnr2000+tplink-wr842nd"
    - <<: *toolchain_prep
      env: _build_name="kvm64"

    - <<: *toolchain_final
      env: _build_name="netgear-wnr2000+tplink-wr842nd"
    - <<: *toolchain_final
      env: _build_name="kvm64"

    - <<: *firmware
      env: _build_name="netgear-wnr2000+tplink-wr842nd"
    - <<: *firmware
      env: _build_name="kvm64"
